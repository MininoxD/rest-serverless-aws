service: swapi-serverless
frameworkVersion: '3'
plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline
custom:
  tableName: 'people-table-${sls:stage}'
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": ["PeopleTable", "Arn" ] }
  environment:
    PEOPLE_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: "./src/index.handler"
    events:
    - http: ANY /
    - http: 'ANY {proxy+}'
  getPeople:
    handler: "./src/index.handler"
    events:
    - http: 'GET /people'
  getOnePeople:
    handler: "./src/index.handler"
    events:
    - http: 'GET /people/{proxy+}'
  createPeople:
    handler: "./src/index.handler"
    events:
    - http: 'POST /people'
resources:
  Resources:
    PeopleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
        
